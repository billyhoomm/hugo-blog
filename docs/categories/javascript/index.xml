<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JavaScript on billyhu&#39;s blog</title>
    <link>https://billyhu.com/categories/javascript/</link>
    <description>Recent content in JavaScript on billyhu&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 30 Jun 2018 14:00:50 +0800</lastBuildDate>
    
	<atom:link href="https://billyhu.com/categories/javascript/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>JavaScript代码中必须加分号的所有情况</title>
      <link>https://billyhu.com/post/javascript%E4%BB%A3%E7%A0%81%E4%B8%AD%E5%BF%85%E9%A1%BB%E5%8A%A0%E5%88%86%E5%8F%B7%E7%9A%84%E6%89%80%E6%9C%89%E6%83%85%E5%86%B5/</link>
      <pubDate>Sat, 30 Jun 2018 14:00:50 +0800</pubDate>
      
      <guid>https://billyhu.com/post/javascript%E4%BB%A3%E7%A0%81%E4%B8%AD%E5%BF%85%E9%A1%BB%E5%8A%A0%E5%88%86%E5%8F%B7%E7%9A%84%E6%89%80%E6%9C%89%E6%83%85%E5%86%B5/</guid>
      <description>前言 之前写JS每句都会加上分号（习惯了很久），但最近好像有点懒，觉得看分号越来越不顺眼，干脆都不写了，所以今天在写async/await函数</description>
    </item>
    
    <item>
      <title>highlight.js完美配合marked</title>
      <link>https://billyhu.com/post/highlight.js%E5%AE%8C%E7%BE%8E%E9%85%8D%E5%90%88marked/</link>
      <pubDate>Sat, 26 May 2018 23:14:20 +0800</pubDate>
      
      <guid>https://billyhu.com/post/highlight.js%E5%AE%8C%E7%BE%8E%E9%85%8D%E5%90%88marked/</guid>
      <description>前言：Using highlight.js with marked 这是我的自建博客系统使用Marked.js来parsemarkdown文件再结合highlight.js来让代码高亮的</description>
    </item>
    
    <item>
      <title>jsPlumb中文文档</title>
      <link>https://billyhu.com/post/jsplumb%E4%B8%AD%E6%96%87%E6%96%87%E6%A1%A3/</link>
      <pubDate>Sun, 13 Nov 2016 20:57:50 +0800</pubDate>
      
      <guid>https://billyhu.com/post/jsplumb%E4%B8%AD%E6%96%87%E6%96%87%E6%A1%A3/</guid>
      <description>前言 以下jsPlumb文档介绍基于jsPlumb2.1.7版本，这是一个开源的流程图或拓扑图绘制工具库，目前网上可用的中文翻译文档并不齐全，</description>
    </item>
    
    <item>
      <title>关于JS模块模式的写法和作用</title>
      <link>https://billyhu.com/post/%E5%85%B3%E4%BA%8Ejs%E6%A8%A1%E5%9D%97%E6%A8%A1%E5%BC%8F%E7%9A%84%E5%86%99%E6%B3%95%E5%92%8C%E4%BD%9C%E7%94%A8/</link>
      <pubDate>Thu, 09 Jun 2016 23:17:50 +0800</pubDate>
      
      <guid>https://billyhu.com/post/%E5%85%B3%E4%BA%8Ejs%E6%A8%A1%E5%9D%97%E6%A8%A1%E5%BC%8F%E7%9A%84%E5%86%99%E6%B3%95%E5%92%8C%E4%BD%9C%E7%94%A8/</guid>
      <description>前言 本来对于js中模块模式这个词还没有很清晰的定义，但在看一个小项目的时候发现了用模块模式定义工具函数的作用，而且已经被很多大公司使用的EC</description>
    </item>
    
    <item>
      <title>JS的函数定义方式以及对声明的提前</title>
      <link>https://billyhu.com/post/js%E7%9A%84%E5%87%BD%E6%95%B0%E5%AE%9A%E4%B9%89%E6%96%B9%E5%BC%8F%E4%BB%A5%E5%8F%8A%E5%AF%B9%E5%A3%B0%E6%98%8E%E7%9A%84%E6%8F%90%E5%89%8D/</link>
      <pubDate>Tue, 08 Mar 2016 23:20:32 +0800</pubDate>
      
      <guid>https://billyhu.com/post/js%E7%9A%84%E5%87%BD%E6%95%B0%E5%AE%9A%E4%B9%89%E6%96%B9%E5%BC%8F%E4%BB%A5%E5%8F%8A%E5%AF%B9%E5%A3%B0%E6%98%8E%E7%9A%84%E6%8F%90%E5%89%8D/</guid>
      <description>前言 由于javascript中的函数定义方式比较特殊，并且每种的特点都不相同，所以本文介绍一下JS几种函数定义方式和各自的优缺点，并且对JS</description>
    </item>
    
    <item>
      <title>js的链式调用分析</title>
      <link>https://billyhu.com/post/js%E7%9A%84%E9%93%BE%E5%BC%8F%E8%B0%83%E7%94%A8%E5%88%86%E6%9E%90/</link>
      <pubDate>Sun, 17 Jan 2016 21:40:32 +0800</pubDate>
      
      <guid>https://billyhu.com/post/js%E7%9A%84%E9%93%BE%E5%BC%8F%E8%B0%83%E7%94%A8%E5%88%86%E6%9E%90/</guid>
      <description>前言 在做一个组件化开发的案例时在主逻辑中用到了链式调用的方法，目的是为了让代码更简洁易读，减少代码量，但是对各个构造函数末尾的&amp;rdquo;</description>
    </item>
    
    <item>
      <title>JavaScript阻止事件冒泡</title>
      <link>https://billyhu.com/post/javascript%E9%98%BB%E6%AD%A2%E4%BA%8B%E4%BB%B6%E5%86%92%E6%B3%A1/</link>
      <pubDate>Fri, 01 Jan 2016 09:50:50 +0800</pubDate>
      
      <guid>https://billyhu.com/post/javascript%E9%98%BB%E6%AD%A2%E4%BA%8B%E4%BB%B6%E5%86%92%E6%B3%A1/</guid>
      <description>取消默认操作 w3c 的方法是 e.preventDefault()，IE 则是使用 e.returnValue = false; 在支持 addEventListener() 的浏览器中，也能通过调用时间对象的 preventDefault() 方法取消时间的默认</description>
    </item>
    
    <item>
      <title>关于Javascript闭包的总结</title>
      <link>https://billyhu.com/post/%E5%85%B3%E4%BA%8Ejavascript%E9%97%AD%E5%8C%85%E7%9A%84%E6%80%BB%E7%BB%93/</link>
      <pubDate>Sat, 31 Oct 2015 12:20:50 +0800</pubDate>
      
      <guid>https://billyhu.com/post/%E5%85%B3%E4%BA%8Ejavascript%E9%97%AD%E5%8C%85%E7%9A%84%E6%80%BB%E7%BB%93/</guid>
      <description>关于闭包这个词的解释 维基百科中对于闭包的经典解释： 在计算机科学中，闭包（Closure）是词法闭包（Lexical Closure）的简称，是</description>
    </item>
    
    <item>
      <title>javascript中的this用法</title>
      <link>https://billyhu.com/post/javascript%E4%B8%AD%E7%9A%84this%E7%94%A8%E6%B3%95/</link>
      <pubDate>Fri, 09 Oct 2015 00:36:50 +0800</pubDate>
      
      <guid>https://billyhu.com/post/javascript%E4%B8%AD%E7%9A%84this%E7%94%A8%E6%B3%95/</guid>
      <description>前言 this是Javascript语言的一个关键字。 它代表函数运行时，自动生成的一个内部对象，只能在函数内部使用。比如， 1 2 3 function test(){ this.x = 1; } 随</description>
    </item>
    
    <item>
      <title>JS依次执行多项异步任务</title>
      <link>https://billyhu.com/post/js%E4%BE%9D%E6%AC%A1%E6%89%A7%E8%A1%8C%E5%A4%9A%E9%A1%B9%E5%BC%82%E6%AD%A5%E4%BB%BB%E5%8A%A1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://billyhu.com/post/js%E4%BE%9D%E6%AC%A1%E6%89%A7%E8%A1%8C%E5%A4%9A%E9%A1%B9%E5%BC%82%E6%AD%A5%E4%BB%BB%E5%8A%A1/</guid>
      <description>1、JS依次执行多项异步任务 有时候，我们希望批量执行一组异步任务，但是不是并行，而是依次执行，这组任务是动态的，在一个数组里，当然我们可以用</description>
    </item>
    
  </channel>
</rss>